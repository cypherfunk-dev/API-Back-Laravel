<?php declare(strict_types=1);

/**
 * API Tejidos Artesanales
 * API para sistema de gestiÃ³n de productos y servicios de tejidos artesanales
 * PHP version 8.1
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: soporte@tejidosartesanales.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 * Source files are located at:
 *
 * > https://github.com/OpenAPITools/openapi-generator/blob/master/modules/openapi-generator/src/main/resources/php-laravel/
 */


namespace OpenAPI\Server\Http\Controllers;

use Crell\Serde\SerdeCommon;
use Illuminate\Routing\Controller;
use Illuminate\Http\JsonResponse;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Validator;


use OpenAPI\Server\Api\InventarioApiInterface;

class InventarioController extends Controller
{
    /**
     * Constructor
     */
    public function __construct(
        private readonly InventarioApiInterface $api,
        private readonly SerdeCommon $serde = new SerdeCommon(),
    )
    {
    }

    /**
     * Operation getItemInventory
     *
     * Listar variantes de inventario.
     *
     */
    public function getItemInventory(Request $request, int $sku): JsonResponse
    {
        $validator = Validator::make(
            array_merge(
                [
                    'sku' => $sku,
                ],
                $request->all(),
            ),
            [
                'sku' => [
                    'required',
                    'integer',
                ],
            ],
        );

        if ($validator->fails()) {
            return response()->json(['error' => 'Invalid input'], 400);
        }


        try {
            $apiResult = $this->api->getItemInventory($sku);
        } catch (\Exception $exception) {
            // This shouldn't happen
            report($exception);
            return response()->json(['error' => $exception->getMessage()], 500);
        }

        if (is_array($apiResult)) {
            $serialized = array_map(fn ($item) => $this->serde->serialize($item, format: 'array'), $apiResult);
            return response()->json($serialized, 200);
        }


        // This shouldn't happen
        return response()->abort(500);
    }
}
